{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\isa-front\\\\src\\\\components\\\\centerAppointments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useEffect, useState } from \"react\";\nimport { useTable, useSortBy, useGlobalFilter, useFilters, usePagination } from \"react-table\";\nimport { COLUMNS } from \"./common/columnAppointment\";\nimport \"./table.css\";\nimport { GlobalFilter } from \"./common/globalFilter\";\nimport { ColumnFilter } from \"./common/columnFilter\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CenterAppointmentTable = () => {\n  _s();\n  const [data, setAppointments] = useState([]);\n  const centerId = this.props.match.params.id;\n  useEffect(() => {\n    axios.get(\"https://localhost:44303/api/centers/\" + centerId).then(res => {\n      console.log(res);\n      /*for (let key in res.data) {\r\n        centers.push({ ...res.data[key], id: key });\r\n      }*/\n      setAppointments(res.data);\n    }).catch(err => console.log(err));\n  }, []);\n  const columns = useMemo(() => COLUMNS, []);\n\n  //const data = useMemo(() => centers, []);\n  const defaultColumn = useMemo(() => {\n    return {\n      Filter: ColumnFilter\n    };\n  }, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    state,\n    setGlobalFilter,\n    prepareRow\n  } = useTable({\n    columns,\n    data,\n    defaultColumn\n  }, useFilters, useGlobalFilter, useSortBy, usePagination);\n  const {\n    globalFilter,\n    pageIndex,\n    pageSize\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Cao\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 10\n  }, this);\n};\n_s(CenterAppointmentTable, \"cQkC/xbNDu0ADriNCTk+IWHb6zg=\", false, function () {\n  return [useTable];\n});\n_c = CenterAppointmentTable;\nvar _c;\n$RefreshReg$(_c, \"CenterAppointmentTable\");","map":{"version":3,"names":["React","useMemo","useEffect","useState","useTable","useSortBy","useGlobalFilter","useFilters","usePagination","COLUMNS","GlobalFilter","ColumnFilter","axios","CenterAppointmentTable","data","setAppointments","centerId","props","match","params","id","get","then","res","console","log","catch","err","columns","defaultColumn","Filter","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","gotoPage","pageCount","setPageSize","state","setGlobalFilter","prepareRow","globalFilter","pageIndex","pageSize"],"sources":["C:/Users/Dejan/isa-front/src/components/centerAppointments.jsx"],"sourcesContent":["import React, { useMemo, useEffect, useState } from \"react\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  useGlobalFilter,\r\n  useFilters,\r\n  usePagination,\r\n} from \"react-table\";\r\n\r\nimport { COLUMNS } from \"./common/columnAppointment\";\r\nimport \"./table.css\";\r\nimport { GlobalFilter } from \"./common/globalFilter\";\r\nimport { ColumnFilter } from \"./common/columnFilter\";\r\nimport axios from \"axios\";\r\n\r\nexport const CenterAppointmentTable = () => {\r\n  const [data, setAppointments] = useState([]);\r\n  const centerId = this.props.match.params.id;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://localhost:44303/api/centers/\" + centerId)\r\n      .then((res) => {\r\n        console.log(res);\r\n        /*for (let key in res.data) {\r\n          centers.push({ ...res.data[key], id: key });\r\n        }*/\r\n        setAppointments(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  const columns = useMemo(() => COLUMNS, []);\r\n\r\n  //const data = useMemo(() => centers, []);\r\n  const defaultColumn = useMemo(() => {\r\n    return {\r\n      Filter: ColumnFilter,\r\n    };\r\n  }, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    state,\r\n    setGlobalFilter,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const { globalFilter, pageIndex, pageSize } = state;\r\n\r\n  return <h1>Cao</h1>;\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SACEC,QAAQ,EACRC,SAAS,EACTC,eAAe,EACfC,UAAU,EACVC,aAAa,QACR,aAAa;AAEpB,SAASC,OAAO,QAAQ,4BAA4B;AACpD,OAAO,aAAa;AACpB,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,OAAO,MAAMC,sBAAsB,GAAG,MAAM;EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMa,QAAQ,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,EAAE;EAC3ClB,SAAS,CAAC,MAAM;IACdU,KAAK,CACFS,GAAG,CAAC,sCAAsC,GAAGL,QAAQ,CAAC,CACtDM,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB;AACR;AACA;MACQR,eAAe,CAACQ,GAAG,CAACT,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDY,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,OAAO,GAAG3B,OAAO,CAAC,MAAMQ,OAAO,EAAE,EAAE,CAAC;;EAE1C;EACA,MAAMoB,aAAa,GAAG5B,OAAO,CAAC,MAAM;IAClC,OAAO;MACL6B,MAAM,EAAEnB;IACV,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IACJoB,aAAa;IACbC,iBAAiB;IACjBC,YAAY;IACZC,IAAI;IACJC,QAAQ;IACRC,YAAY;IACZC,WAAW;IACXC,eAAe;IACfC,WAAW;IACXC,QAAQ;IACRC,SAAS;IACTC,WAAW;IACXC,KAAK;IACLC,eAAe;IACfC;EACF,CAAC,GAAGzC,QAAQ,CACV;IACEwB,OAAO;IACPd,IAAI;IACJe;EACF,CAAC,EACDtB,UAAU,EACVD,eAAe,EACfD,SAAS,EACTG,aAAa,CACd;EAED,MAAM;IAAEsC,YAAY;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAGL,KAAK;EAEnD,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAY;AACrB,CAAC;AAAC,GAvDW9B,sBAAsB;EAAA,QAwC7BT,QAAQ;AAAA;AAAA,KAxCDS,sBAAsB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}