{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\isa-front\\\\src\\\\components\\\\registeredUserProfile.jsx\";\nimport React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\n/*\r\nconst RegisteredUserProfile = ({ user }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>My profile:</h1>\r\n      <div>\r\n        Profile type: {user.role === \"RegUser\" ? \"Registered user\" : \"Employee\"}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RegisteredUserProfile;\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RegisteredUserProfile extends Form {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      user: {},\n      data: {\n        email: \"\",\n        name: \"\",\n        lastName: \"\",\n        gender: \"\",\n        residenceAddress: \"\",\n        city: \"\",\n        country: \"\",\n        phoneNumber: \"\",\n        jmbg: \"\",\n        profession: \"\",\n        workLocation: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      email: Joi.string().min(5).label(\"Email\")\n    };\n  }\n  async componentDidMount() {\n    const {\n      data: userInfo\n    } = await http.get(\"https://localhost:7293/api/User/GetSingleUser?Id=2bc7512e-4904-4d3c-b94f-9fb8824c315e\");\n    this.setState({\n      user: this.props.user,\n      data: this.mapToViewModel(userInfo)\n    });\n  }\n  mapToViewModel(userInfo) {\n    return {\n      email: userInfo.email,\n      name: userInfo.name,\n      lastName: userInfo.lastName,\n      residenceAddress: userInfo.residenceAddress,\n      city: userInfo.city,\n      country: userInfo.country,\n      phoneNumber: userInfo.phoneNumber,\n      jmbg: userInfo.jmbg,\n      profession: userInfo.profession,\n      workLocation: userInfo.workLocation,\n      errors: {}\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My profile:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Profile type:\", \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [this.state.user.role === \"RegUser\" ? \"Regular user\" : \"Employee\", this.renderInput(\"email\", \"Email\"), this.renderButton(\"Save changes\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default RegisteredUserProfile;","map":{"version":3,"names":["React","Component","http","Form","Joi","RegisteredUserProfile","state","user","data","email","name","lastName","gender","residenceAddress","city","country","phoneNumber","jmbg","profession","workLocation","errors","schema","string","min","label","componentDidMount","userInfo","get","setState","props","mapToViewModel","render","handleSubmit","role","renderInput","renderButton"],"sources":["C:/Users/Dejan/isa-front/src/components/registeredUserProfile.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport http from \"../services/httpService\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\n/*\r\nconst RegisteredUserProfile = ({ user }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>My profile:</h1>\r\n      <div>\r\n        Profile type: {user.role === \"RegUser\" ? \"Registered user\" : \"Employee\"}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RegisteredUserProfile;\r\n*/\r\nclass RegisteredUserProfile extends Form {\r\n  state = {\r\n    user: {},\r\n    data: {\r\n      email: \"\",\r\n      name: \"\",\r\n      lastName: \"\",\r\n      gender: \"\",\r\n      residenceAddress: \"\",\r\n      city: \"\",\r\n      country: \"\",\r\n      phoneNumber: \"\",\r\n      jmbg: \"\",\r\n      profession: \"\",\r\n      workLocation: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    email: Joi.string().min(5).label(\"Email\"),\r\n  };\r\n  async componentDidMount() {\r\n    const { data: userInfo } = await http.get(\r\n      \"https://localhost:7293/api/User/GetSingleUser?Id=2bc7512e-4904-4d3c-b94f-9fb8824c315e\"\r\n    );\r\n\r\n    this.setState({\r\n      user: this.props.user,\r\n      data: this.mapToViewModel(userInfo),\r\n    });\r\n  }\r\n  mapToViewModel(userInfo) {\r\n    return {\r\n      email: userInfo.email,\r\n      name: userInfo.name,\r\n      lastName: userInfo.lastName,\r\n      residenceAddress: userInfo.residenceAddress,\r\n      city: userInfo.city,\r\n      country: userInfo.country,\r\n      phoneNumber: userInfo.phoneNumber,\r\n      jmbg: userInfo.jmbg,\r\n      profession: userInfo.profession,\r\n      workLocation: userInfo.workLocation,\r\n      errors: {},\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>My profile:</h1>\r\n        <div>\r\n          Profile type:{\" \"}\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.state.user.role === \"RegUser\" ? \"Regular user\" : \"Employee\"}\r\n            {this.renderInput(\"email\", \"Email\")}\r\n            {this.renderButton(\"Save changes\")}\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisteredUserProfile;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,GAAG,MAAM,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAcA,MAAMC,qBAAqB,SAASF,IAAI,CAAC;EAAA;IAAA;IAAA,KACvCG,KAAK,GAAG;MACNC,IAAI,EAAE,CAAC,CAAC;MACRC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,gBAAgB,EAAE,EAAE;QACpBC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE,EAAE;QACXC,WAAW,EAAE,EAAE;QACfC,IAAI,EAAE,EAAE;QACRC,UAAU,EAAE,EAAE;QACdC,YAAY,EAAE;MAChB,CAAC;MACDC,MAAM,EAAE,CAAC;IACX,CAAC;IAAA,KACDC,MAAM,GAAG;MACPZ,KAAK,EAAEL,GAAG,CAACkB,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO;IAC1C,CAAC;EAAA;EACD,MAAMC,iBAAiB,GAAG;IACxB,MAAM;MAAEjB,IAAI,EAAEkB;IAAS,CAAC,GAAG,MAAMxB,IAAI,CAACyB,GAAG,CACvC,uFAAuF,CACxF;IAED,IAAI,CAACC,QAAQ,CAAC;MACZrB,IAAI,EAAE,IAAI,CAACsB,KAAK,CAACtB,IAAI;MACrBC,IAAI,EAAE,IAAI,CAACsB,cAAc,CAACJ,QAAQ;IACpC,CAAC,CAAC;EACJ;EACAI,cAAc,CAACJ,QAAQ,EAAE;IACvB,OAAO;MACLjB,KAAK,EAAEiB,QAAQ,CAACjB,KAAK;MACrBC,IAAI,EAAEgB,QAAQ,CAAChB,IAAI;MACnBC,QAAQ,EAAEe,QAAQ,CAACf,QAAQ;MAC3BE,gBAAgB,EAAEa,QAAQ,CAACb,gBAAgB;MAC3CC,IAAI,EAAEY,QAAQ,CAACZ,IAAI;MACnBC,OAAO,EAAEW,QAAQ,CAACX,OAAO;MACzBC,WAAW,EAAEU,QAAQ,CAACV,WAAW;MACjCC,IAAI,EAAES,QAAQ,CAACT,IAAI;MACnBC,UAAU,EAAEQ,QAAQ,CAACR,UAAU;MAC/BC,YAAY,EAAEO,QAAQ,CAACP,YAAY;MACnCC,MAAM,EAAE,CAAC;IACX,CAAC;EACH;EACAW,MAAM,GAAG;IACP,oBACE,QAAC,KAAK,CAAC,QAAQ;MAAA,wBACb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACpB;QAAA,4BACgB,GAAG,eACjB;UAAM,QAAQ,EAAE,IAAI,CAACC,YAAa;UAAA,WAC/B,IAAI,CAAC1B,KAAK,CAACC,IAAI,CAAC0B,IAAI,KAAK,SAAS,GAAG,cAAc,GAAG,UAAU,EAChE,IAAI,CAACC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,EAClC,IAAI,CAACC,YAAY,CAAC,cAAc,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAC7B;MAAA;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA,QACS;EAErB;AACF;AAEA,eAAe9B,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}