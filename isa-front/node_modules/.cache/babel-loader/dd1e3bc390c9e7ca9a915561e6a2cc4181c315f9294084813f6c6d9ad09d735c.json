{"ast":null,"code":"import http from \"./httpService\";\nimport apiUrl from '../config.json';\nexport function registerRegularUser(user) {\n  return http.post(apiUrl + \"/Auth/register/regular\", {\n    email: user.email,\n    password: user.password,\n    repeatedPassword: user.repeatedPassword,\n    name: user.name,\n    lastName: user.lastName,\n    gender: user.gender,\n    residenceAddress: user.residenceAddress,\n    city: user.city,\n    country: user.country,\n    phoneNumber: user.phoneNumber,\n    jmbg: user.jmbg,\n    profession: user.profession,\n    workLocation: user.workLocation\n  });\n}\nexport async function login(email, password) {\n  const {\n    data: jwt\n  } = await http.post(apiUrl + \"/Auth/login\", {\n    email,\n    password\n  });\n  localStorage.setItem(\"token\", jwt);\n}\nexport function logout() {\n  localStorage.removeItem(\"token\");\n}\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem('token');\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\nexport default {\n  login,\n  logout\n};","map":{"version":3,"names":["http","apiUrl","registerRegularUser","user","post","email","password","repeatedPassword","name","lastName","gender","residenceAddress","city","country","phoneNumber","jmbg","profession","workLocation","login","data","jwt","localStorage","setItem","logout","removeItem","getCurrentUser","getItem","jwtDecode","ex"],"sources":["C:/Users/Dejan/isa-front/src/services/authService.js"],"sourcesContent":["import http from \"./httpService\";\r\nimport apiUrl from '../config.json'\r\n\r\nexport function registerRegularUser(user){\r\n    return http.post(apiUrl + \"/Auth/register/regular\", {\r\n        email: user.email,\r\n        password: user.password,\r\n        repeatedPassword: user.repeatedPassword,\r\n        name: user.name,\r\n        lastName: user.lastName,\r\n        gender: user.gender,\r\n        residenceAddress: user.residenceAddress,\r\n        city: user.city,\r\n        country: user.country,\r\n        phoneNumber: user.phoneNumber,\r\n        jmbg: user.jmbg,\r\n        profession: user.profession,\r\n        workLocation: user.workLocation,\r\n    });\r\n}\r\n\r\nexport async function login(email, password){\r\n    const {data: jwt} = await http.post(apiUrl + \"/Auth/login\",{ email, password});\r\n    localStorage.setItem(\"token\", jwt);\r\n}\r\n\r\nexport function logout(){\r\n    localStorage.removeItem(\"token\");\r\n}\r\n\r\nexport function getCurrentUser(){\r\n    try{\r\n        const jwt = localStorage.getItem('token');\r\n        return jwtDecode(jwt);\r\n      }\r\n        catch(ex){\r\n            return null;\r\n        }\r\n}\r\n\r\nexport default{\r\n    login,logout\r\n};"],"mappings":"AAAA,OAAOA,IAAI,MAAM,eAAe;AAChC,OAAOC,MAAM,MAAM,gBAAgB;AAEnC,OAAO,SAASC,mBAAmB,CAACC,IAAI,EAAC;EACrC,OAAOH,IAAI,CAACI,IAAI,CAACH,MAAM,GAAG,wBAAwB,EAAE;IAChDI,KAAK,EAAEF,IAAI,CAACE,KAAK;IACjBC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;IACvBC,gBAAgB,EAAEJ,IAAI,CAACI,gBAAgB;IACvCC,IAAI,EAAEL,IAAI,CAACK,IAAI;IACfC,QAAQ,EAAEN,IAAI,CAACM,QAAQ;IACvBC,MAAM,EAAEP,IAAI,CAACO,MAAM;IACnBC,gBAAgB,EAAER,IAAI,CAACQ,gBAAgB;IACvCC,IAAI,EAAET,IAAI,CAACS,IAAI;IACfC,OAAO,EAAEV,IAAI,CAACU,OAAO;IACrBC,WAAW,EAAEX,IAAI,CAACW,WAAW;IAC7BC,IAAI,EAAEZ,IAAI,CAACY,IAAI;IACfC,UAAU,EAAEb,IAAI,CAACa,UAAU;IAC3BC,YAAY,EAAEd,IAAI,CAACc;EACvB,CAAC,CAAC;AACN;AAEA,OAAO,eAAeC,KAAK,CAACb,KAAK,EAAEC,QAAQ,EAAC;EACxC,MAAM;IAACa,IAAI,EAAEC;EAAG,CAAC,GAAG,MAAMpB,IAAI,CAACI,IAAI,CAACH,MAAM,GAAG,aAAa,EAAC;IAAEI,KAAK;IAAEC;EAAQ,CAAC,CAAC;EAC9Ee,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,GAAG,CAAC;AACtC;AAEA,OAAO,SAASG,MAAM,GAAE;EACpBF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;AACpC;AAEA,OAAO,SAASC,cAAc,GAAE;EAC5B,IAAG;IACC,MAAML,GAAG,GAAGC,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;IACzC,OAAOC,SAAS,CAACP,GAAG,CAAC;EACvB,CAAC,CACC,OAAMQ,EAAE,EAAC;IACL,OAAO,IAAI;EACf;AACR;AAEA,eAAc;EACVV,KAAK;EAACK;AACV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}