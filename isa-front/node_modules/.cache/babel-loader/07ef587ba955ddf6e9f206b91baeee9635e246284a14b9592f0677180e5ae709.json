{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\isa-front\\\\src\\\\components\\\\registerForm.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport * as authService from \"../services/authService\";\nimport auth from \"../services/authService\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RegisterForm extends Form {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: {\n        email: \"\",\n        password: \"\",\n        repeatedPassword: \"\",\n        name: \"\",\n        lastName: \"\",\n        gender: \"\",\n        residenceAddress: \"\",\n        city: \"\",\n        country: \"\",\n        phoneNumber: \"\",\n        jmbg: \"\",\n        profession: \"\",\n        workLocation: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      email: Joi.string().required().email().label(\"Email\").error(() => {\n        return {\n          message: \"Please enter a valid email address.\"\n        };\n      }),\n      password: Joi.string().required().min(5).label(\"Password\").error(() => {\n        return {\n          message: \"Password must be at least 5 characters.\"\n        };\n      }),\n      repeatedPassword: Joi.any().valid(Joi.ref(\"password\")).required().options({\n        language: {\n          any: {\n            allowOnly: \"must match password\"\n          }\n        }\n      }),\n      name: Joi.string().required().label(\"Name\").error(() => {\n        return {\n          message: \"Please enter your name.\"\n        };\n      }),\n      lastName: Joi.string().required().label(\"Last Name\").error(() => {\n        return {\n          message: \"Please enter your last name.\"\n        };\n      }),\n      gender: Joi.string().required().label(\"Gender\").error(() => {\n        return {\n          message: \"Please specify your gender.\"\n        };\n      }),\n      residenceAddress: Joi.string().required().label(\"Residence Address\").error(() => {\n        return {\n          message: \"Please enter your residence address.\"\n        };\n      }),\n      city: Joi.string().required().label(\"City\").error(() => {\n        return {\n          message: \"Please enter your city.\"\n        };\n      }),\n      country: Joi.string().required().label(\"Country\").error(() => {\n        return {\n          message: \"Please enter your country.\"\n        };\n      }),\n      phoneNumber: Joi.string().required().label(\"Phone Number\"),\n      jmbg: Joi.string().length(13).regex(/^\\d+$/).required().label(\"jmbg\").error(() => {\n        return {\n          message: \"Please enter a valid JMBG.\"\n        };\n      }),\n      profession: Joi.string().required().label(\"Profession\").error(() => {\n        return {\n          message: \"Please enter your profession.\"\n        };\n      }),\n      workLocation: Joi.string().required().label(\"Work Location\").error(() => {\n        return {\n          message: \"Please enter your work location.\"\n        };\n      })\n    };\n    this.doSubmit = async () => {\n      try {\n        await authService.registerRegularUser(this.state.data);\n        //auth.loginWithJwt(response.data.token) //Ovde bi trebalo da sacuvas token iz responsa u local storage\n        //window.location = \"/homePage\";\n        alert(\"Please confirm your email address.\");\n      } catch (ex) {\n        if (ex.response && ex.response.status === 400) {\n          const errors = {\n            ...this.state.errors\n          };\n          errors.email = ex.response.data;\n          errors.password = ex.response.errors.Password;\n          this.setState({\n            errors\n          });\n        }\n      }\n    };\n  }\n  render() {\n    if (auth.getCurrentUser()) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/homePage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 39\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [this.renderInput(\"email\", \"Email\"), this.renderInput(\"password\", \"Password\", \"password\"), this.renderInput(\"repeatedPassword\", \"Repeat Password\", \"password\"), this.renderInput(\"name\", \"Name\"), this.renderInput(\"lastName\", \"Last Name\"), this.renderInputRadioButton(\"gender\", \"Male\", \"male\"), this.renderInputRadioButton(\"gender\", \"Female\", \"female\"), this.renderInput(\"jmbg\", \"JMBG\"), this.renderInput(\"phoneNumber\", \"Phone Number\"), this.renderInput(\"country\", \"Country\"), this.renderInput(\"city\", \"City\"), this.renderInput(\"residenceAddress\", \"Residence Address\"), this.renderInput(\"profession\", \"Profession\"), this.renderInput(\"workLocation\", \"Work Location\"), this.renderButton(\"Register\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default RegisterForm;","map":{"version":3,"names":["React","Joi","Form","authService","auth","Redirect","RegisterForm","state","data","email","password","repeatedPassword","name","lastName","gender","residenceAddress","city","country","phoneNumber","jmbg","profession","workLocation","errors","schema","string","required","label","error","message","min","any","valid","ref","options","language","allowOnly","length","regex","doSubmit","registerRegularUser","alert","ex","response","status","Password","setState","render","getCurrentUser","handleSubmit","renderInput","renderInputRadioButton","renderButton"],"sources":["C:/Users/Dejan/isa-front/src/components/registerForm.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport * as authService from \"../services/authService\";\r\nimport auth from \"../services/authService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: {\r\n      email: \"\",\r\n      password: \"\",\r\n      repeatedPassword: \"\",\r\n      name: \"\",\r\n      lastName: \"\",\r\n      gender: \"\",\r\n      residenceAddress: \"\",\r\n      city: \"\",\r\n      country: \"\",\r\n      phoneNumber: \"\",\r\n      jmbg: \"\",\r\n      profession: \"\",\r\n      workLocation: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    email: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label(\"Email\")\r\n      .error(() => {\r\n        return {\r\n          message: \"Please enter a valid email address.\",\r\n        };\r\n      }),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(5)\r\n      .label(\"Password\")\r\n      .error(() => {\r\n        return {\r\n          message: \"Password must be at least 5 characters.\",\r\n        };\r\n      }),\r\n    repeatedPassword: Joi.any()\r\n      .valid(Joi.ref(\"password\"))\r\n      .required()\r\n      .options({ language: { any: { allowOnly: \"must match password\" } } }),\r\n    name: Joi.string()\r\n      .required()\r\n      .label(\"Name\")\r\n      .error(() => {\r\n        return {\r\n          message: \"Please enter your name.\",\r\n        };\r\n      }),\r\n    lastName: Joi.string()\r\n      .required()\r\n      .label(\"Last Name\")\r\n      .error(() => {\r\n        return {\r\n          message: \"Please enter your last name.\",\r\n        };\r\n      }),\r\n    gender: Joi.string()\r\n      .required()\r\n      .label(\"Gender\")\r\n      .error(() => {\r\n        return {\r\n          message: \"Please specify your gender.\",\r\n        };\r\n      }),\r\n    residenceAddress: Joi.string()\r\n      .required()\r\n      .label(\"Residence Address\")\r\n      .error(() => {\r\n        return {\r\n          message: \"Please enter your residence address.\",\r\n        };\r\n      }),\r\n    city: Joi.string()\r\n      .required()\r\n      .label(\"City\")\r\n      .error(() => {\r\n        return {\r\n          message: \"Please enter your city.\",\r\n        };\r\n      }),\r\n    country: Joi.string()\r\n      .required()\r\n      .label(\"Country\")\r\n      .error(() => {\r\n        return {\r\n          message: \"Please enter your country.\",\r\n        };\r\n      }),\r\n    phoneNumber: Joi.string().required().label(\"Phone Number\"),\r\n    jmbg: Joi.string()\r\n      .length(13)\r\n      .regex(/^\\d+$/)\r\n      .required()\r\n      .label(\"jmbg\")\r\n      .error(() => {\r\n        return { message: \"Please enter a valid JMBG.\" };\r\n      }),\r\n    profession: Joi.string()\r\n      .required()\r\n      .label(\"Profession\")\r\n      .error(() => {\r\n        return {\r\n          message: \"Please enter your profession.\",\r\n        };\r\n      }),\r\n    workLocation: Joi.string()\r\n      .required()\r\n      .label(\"Work Location\")\r\n      .error(() => {\r\n        return {\r\n          message: \"Please enter your work location.\",\r\n        };\r\n      }),\r\n  };\r\n  doSubmit = async () => {\r\n    try {\r\n      await authService.registerRegularUser(this.state.data);\r\n      //auth.loginWithJwt(response.data.token) //Ovde bi trebalo da sacuvas token iz responsa u local storage\r\n      //window.location = \"/homePage\";\r\n      alert(\"Please confirm your email address.\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.email = ex.response.data;\r\n        errors.password = ex.response.errors.Password;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/homePage\" />;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"email\", \"Email\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"repeatedPassword\", \"Repeat Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderInput(\"lastName\", \"Last Name\")}\r\n          {this.renderInputRadioButton(\"gender\", \"Male\", \"male\")}\r\n          {this.renderInputRadioButton(\"gender\", \"Female\", \"female\")}\r\n\r\n          {this.renderInput(\"jmbg\", \"JMBG\")}\r\n          {this.renderInput(\"phoneNumber\", \"Phone Number\")}\r\n          {this.renderInput(\"country\", \"Country\")}\r\n          {this.renderInput(\"city\", \"City\")}\r\n          {this.renderInput(\"residenceAddress\", \"Residence Address\")}\r\n          {this.renderInput(\"profession\", \"Profession\")}\r\n          {this.renderInput(\"workLocation\", \"Work Location\")}\r\n\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}