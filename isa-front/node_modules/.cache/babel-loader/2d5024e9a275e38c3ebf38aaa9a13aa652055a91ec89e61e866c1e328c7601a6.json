{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\isa-front\\\\src\\\\components\\\\registeredUserProfile.jsx\";\nimport React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\nimport auth from \"../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RegisteredUserProfile extends Form {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      user: {},\n      data: {\n        email: \"\"\n        /*\r\n        name: \"\",\r\n        lastName: \"\",\r\n        gender: \"\",\r\n        residenceAddress: \"\",\r\n        city: \"\",\r\n        country: \"\",\r\n        phoneNumber: \"\",\r\n        jmbg: \"\",\r\n        profession: \"\",\r\n        workLocation: \"\",*/\n      },\n\n      errors: {}\n    };\n    this.schema = {\n      email: Joi.string().required().email().label(\"Email\").error(() => {\n        return {\n          message: \"Please enter a valid email address.\"\n        };\n      })\n    };\n    this.doSubmit = () => {\n      console.log(\"Profile info saved.\");\n    };\n  }\n  async componentDidMount() {\n    const userR = auth.getCurrentUser();\n    const {\n      data: userInfo\n    } = await http.get(\"https://localhost:7293/api/RegUser/GetSingleRegUserByEmail?Email=\" + userR.email);\n    //console.log(userInfo.user.userName);\n\n    this.setState({\n      user: this.props.user,\n      data: this.mapToViewModel(userInfo.user)\n    });\n  }\n  mapToViewModel(userInfo) {\n    return {\n      email: userInfo.email\n      /*\r\n      name: userInfo.name,\r\n      lastName: userInfo.lastName,\r\n      residenceAddress: userInfo.residenceAddress,\r\n      city: userInfo.city,\r\n      country: userInfo.country,\r\n      phoneNumber: userInfo.phoneNumber,\r\n      jmbg: userInfo.jmbg,\r\n      profession: userInfo.profession,\r\n      workLocation: userInfo.workLocation,*/\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My profile:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Profile type:\", \" \", this.state.user.role === \"RegUser\" ? \"Regular user\" : \"Employee\", /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [\"email:\", this.state.data.email, this.renderButton(\"Save changes\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default RegisteredUserProfile;","map":{"version":3,"names":["React","Component","http","Form","Joi","auth","RegisteredUserProfile","state","user","data","email","errors","schema","string","required","label","error","message","doSubmit","console","log","componentDidMount","userR","getCurrentUser","userInfo","get","setState","props","mapToViewModel","render","role","handleSubmit","renderButton"],"sources":["C:/Users/Dejan/isa-front/src/components/registeredUserProfile.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport http from \"../services/httpService\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisteredUserProfile extends Form {\r\n  state = {\r\n    user: {},\r\n    data: {\r\n      email: \"\",\r\n      /*\r\n      name: \"\",\r\n      lastName: \"\",\r\n      gender: \"\",\r\n      residenceAddress: \"\",\r\n      city: \"\",\r\n      country: \"\",\r\n      phoneNumber: \"\",\r\n      jmbg: \"\",\r\n      profession: \"\",\r\n      workLocation: \"\",*/\r\n    },\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    email: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label(\"Email\")\r\n      .error(() => {\r\n        return {\r\n          message: \"Please enter a valid email address.\",\r\n        };\r\n      }),\r\n  };\r\n  async componentDidMount() {\r\n    const userR = auth.getCurrentUser();\r\n\r\n    const { data: userInfo } = await http.get(\r\n      \"https://localhost:7293/api/RegUser/GetSingleRegUserByEmail?Email=\" +\r\n        userR.email\r\n    );\r\n    //console.log(userInfo.user.userName);\r\n\r\n    this.setState({\r\n      user: this.props.user,\r\n      data: this.mapToViewModel(userInfo.user),\r\n    });\r\n  }\r\n  mapToViewModel(userInfo) {\r\n    return {\r\n      email: userInfo.email,\r\n      /*\r\n      name: userInfo.name,\r\n      lastName: userInfo.lastName,\r\n      residenceAddress: userInfo.residenceAddress,\r\n      city: userInfo.city,\r\n      country: userInfo.country,\r\n      phoneNumber: userInfo.phoneNumber,\r\n      jmbg: userInfo.jmbg,\r\n      profession: userInfo.profession,\r\n      workLocation: userInfo.workLocation,*/\r\n    };\r\n  }\r\n  doSubmit = () => {\r\n    console.log(\"Profile info saved.\");\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>My profile:</h1>\r\n        <div>\r\n          Profile type:{\" \"}\r\n          {this.state.user.role === \"RegUser\" ? \"Regular user\" : \"Employee\"}\r\n          <form onSubmit={this.handleSubmit}>\r\n            email:\r\n            {this.state.data.email}\r\n            {this.renderButton(\"Save changes\")}\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisteredUserProfile;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,GAAG,MAAM,aAAa;AAC7B,OAAOC,IAAI,MAAM,yBAAyB;AAAC;AAE3C,MAAMC,qBAAqB,SAASH,IAAI,CAAC;EAAA;IAAA;IAAA,KACvCI,KAAK,GAAG;MACNC,IAAI,EAAE,CAAC,CAAC;MACRC,IAAI,EAAE;QACJC,KAAK,EAAE;QACP;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,CAAC;;MACDC,MAAM,EAAE,CAAC;IACX,CAAC;IAAA,KACDC,MAAM,GAAG;MACPF,KAAK,EAAEN,GAAG,CAACS,MAAM,EAAE,CAChBC,QAAQ,EAAE,CACVJ,KAAK,EAAE,CACPK,KAAK,CAAC,OAAO,CAAC,CACdC,KAAK,CAAC,MAAM;QACX,OAAO;UACLC,OAAO,EAAE;QACX,CAAC;MACH,CAAC;IACL,CAAC;IAAA,KA8BDC,QAAQ,GAAG,MAAM;MACfC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC;EAAA;EA/BD,MAAMC,iBAAiB,GAAG;IACxB,MAAMC,KAAK,GAAGjB,IAAI,CAACkB,cAAc,EAAE;IAEnC,MAAM;MAAEd,IAAI,EAAEe;IAAS,CAAC,GAAG,MAAMtB,IAAI,CAACuB,GAAG,CACvC,mEAAmE,GACjEH,KAAK,CAACZ,KAAK,CACd;IACD;;IAEA,IAAI,CAACgB,QAAQ,CAAC;MACZlB,IAAI,EAAE,IAAI,CAACmB,KAAK,CAACnB,IAAI;MACrBC,IAAI,EAAE,IAAI,CAACmB,cAAc,CAACJ,QAAQ,CAAChB,IAAI;IACzC,CAAC,CAAC;EACJ;EACAoB,cAAc,CAACJ,QAAQ,EAAE;IACvB,OAAO;MACLd,KAAK,EAAEc,QAAQ,CAACd;MAChB;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,CAAC;EACH;;EAIAmB,MAAM,GAAG;IACP,oBACE,QAAC,KAAK,CAAC,QAAQ;MAAA,wBACb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACpB;QAAA,4BACgB,GAAG,EAChB,IAAI,CAACtB,KAAK,CAACC,IAAI,CAACsB,IAAI,KAAK,SAAS,GAAG,cAAc,GAAG,UAAU,eACjE;UAAM,QAAQ,EAAE,IAAI,CAACC,YAAa;UAAA,qBAE/B,IAAI,CAACxB,KAAK,CAACE,IAAI,CAACC,KAAK,EACrB,IAAI,CAACsB,YAAY,CAAC,cAAc,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAC7B;MAAA;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA,QACS;EAErB;AACF;AAEA,eAAe1B,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}