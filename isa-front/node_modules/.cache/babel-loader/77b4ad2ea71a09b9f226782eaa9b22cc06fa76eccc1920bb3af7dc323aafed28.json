{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dejan\\\\isa-front\\\\src\\\\components\\\\registeredUserProfile.jsx\";\nimport React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\nimport auth from \"../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RegisteredUserProfile extends Form {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      user: {},\n      data: {\n        /*id: \"\",\r\n        userId: \"\",\r\n        email: \"\",*/\n        phoneNumber: \"\"\n        /*\r\n        name: \"\",\r\n        lastName: \"\",\r\n        gender: \"\",\r\n        residenceAddress: \"\",\r\n        city: \"\",\r\n        country: \"\",\r\n        \n        jmbg: \"\",\r\n        profession: \"\",\r\n        workLocation: \"\",*/\n      },\n\n      errors: {}\n    };\n    this.schema = {\n      phoneNumber: Joi.string().label(\"Phone Number\")\n    };\n    this.doSubmit = async () => {\n      await http.put(\"https://localhost:7293/api/RegUser/UpdateRegUser\", {\n        id: this.state.id,\n        userId: this.state.userId,\n        phone: this.state.phoneNumber\n      });\n      console.log(\"Profile info saved.\");\n    };\n  }\n  async componentDidMount() {\n    const currentUser = auth.getCurrentUser();\n    const {\n      data: userInfo\n    } = await http.get(\"https://localhost:7293/api/RegUser/GetSingleRegUserByEmail?Email=\" + currentUser.email);\n    console.log(userInfo);\n    this.setState({\n      user: this.props.user,\n      data: this.mapToViewModel(userInfo)\n    });\n  }\n  mapToViewModel(userInfo) {\n    return {\n      phoneNumber: userInfo.phoneNumber\n      /*\r\n      email: userInfo.user.email,\r\n      \r\n      id: userInfo.id,\r\n      userId: userInfo.user.id,*/\n      /*\r\n      name: userInfo.name,\r\n      lastName: userInfo.lastName,\r\n      residenceAddress: userInfo.residenceAddress,\r\n      city: userInfo.city,\r\n      country: userInfo.country,\r\n      \r\n      jmbg: userInfo.jmbg,\r\n      profession: userInfo.profession,\r\n      workLocation: userInfo.workLocation,*/\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My profile:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Profile type:\", \" \", this.state.user.role === \"RegUser\" ? \"Regular user\" : \"Employee\", \"Email \", this.state.data.email, /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [this.renderInput(\"phoneNumber\", \"Phone number\"), this.renderButton(\"Save changes\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default RegisteredUserProfile;","map":{"version":3,"names":["React","Component","http","Form","Joi","auth","RegisteredUserProfile","state","user","data","phoneNumber","errors","schema","string","label","doSubmit","put","id","userId","phone","console","log","componentDidMount","currentUser","getCurrentUser","userInfo","get","email","setState","props","mapToViewModel","render","role","handleSubmit","renderInput","renderButton"],"sources":["C:/Users/Dejan/isa-front/src/components/registeredUserProfile.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport http from \"../services/httpService\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisteredUserProfile extends Form {\r\n  state = {\r\n    user: {},\r\n    data: {\r\n      /*id: \"\",\r\n      userId: \"\",\r\n      email: \"\",*/\r\n      phoneNumber: \"\",\r\n      /*\r\n      name: \"\",\r\n      lastName: \"\",\r\n      gender: \"\",\r\n      residenceAddress: \"\",\r\n      city: \"\",\r\n      country: \"\",\r\n     \r\n      jmbg: \"\",\r\n      profession: \"\",\r\n      workLocation: \"\",*/\r\n    },\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    phoneNumber: Joi.string().label(\"Phone Number\"),\r\n  };\r\n  async componentDidMount() {\r\n    const currentUser = auth.getCurrentUser();\r\n\r\n    const { data: userInfo } = await http.get(\r\n      \"https://localhost:7293/api/RegUser/GetSingleRegUserByEmail?Email=\" +\r\n        currentUser.email\r\n    );\r\n    console.log(userInfo);\r\n\r\n    this.setState({\r\n      user: this.props.user,\r\n      data: this.mapToViewModel(userInfo),\r\n    });\r\n  }\r\n  mapToViewModel(userInfo) {\r\n    return {\r\n      phoneNumber: userInfo.phoneNumber,\r\n      /*\r\n      email: userInfo.user.email,\r\n      \r\n      id: userInfo.id,\r\n      userId: userInfo.user.id,*/\r\n      /*\r\n      name: userInfo.name,\r\n      lastName: userInfo.lastName,\r\n      residenceAddress: userInfo.residenceAddress,\r\n      city: userInfo.city,\r\n      country: userInfo.country,\r\n      \r\n      jmbg: userInfo.jmbg,\r\n      profession: userInfo.profession,\r\n      workLocation: userInfo.workLocation,*/\r\n    };\r\n  }\r\n  doSubmit = async () => {\r\n    await http.put(\"https://localhost:7293/api/RegUser/UpdateRegUser\", {\r\n      id: this.state.id,\r\n      userId: this.state.userId,\r\n      phone: this.state.phoneNumber,\r\n    });\r\n    console.log(\"Profile info saved.\");\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>My profile:</h1>\r\n        <div>\r\n          Profile type:{\" \"}\r\n          {this.state.user.role === \"RegUser\" ? \"Regular user\" : \"Employee\"}\r\n          Email {this.state.data.email}\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.renderInput(\"phoneNumber\", \"Phone number\")}\r\n            {this.renderButton(\"Save changes\")}\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisteredUserProfile;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,GAAG,MAAM,aAAa;AAC7B,OAAOC,IAAI,MAAM,yBAAyB;AAAC;AAE3C,MAAMC,qBAAqB,SAASH,IAAI,CAAC;EAAA;IAAA;IAAA,KACvCI,KAAK,GAAG;MACNC,IAAI,EAAE,CAAC,CAAC;MACRC,IAAI,EAAE;QACJ;AACN;AACA;QACMC,WAAW,EAAE;QACb;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,CAAC;;MACDC,MAAM,EAAE,CAAC;IACX,CAAC;IAAA,KACDC,MAAM,GAAG;MACPF,WAAW,EAAEN,GAAG,CAACS,MAAM,EAAE,CAACC,KAAK,CAAC,cAAc;IAChD,CAAC;IAAA,KAmCDC,QAAQ,GAAG,YAAY;MACrB,MAAMb,IAAI,CAACc,GAAG,CAAC,kDAAkD,EAAE;QACjEC,EAAE,EAAE,IAAI,CAACV,KAAK,CAACU,EAAE;QACjBC,MAAM,EAAE,IAAI,CAACX,KAAK,CAACW,MAAM;QACzBC,KAAK,EAAE,IAAI,CAACZ,KAAK,CAACG;MACpB,CAAC,CAAC;MACFU,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC;EAAA;EAzCD,MAAMC,iBAAiB,GAAG;IACxB,MAAMC,WAAW,GAAGlB,IAAI,CAACmB,cAAc,EAAE;IAEzC,MAAM;MAAEf,IAAI,EAAEgB;IAAS,CAAC,GAAG,MAAMvB,IAAI,CAACwB,GAAG,CACvC,mEAAmE,GACjEH,WAAW,CAACI,KAAK,CACpB;IACDP,OAAO,CAACC,GAAG,CAACI,QAAQ,CAAC;IAErB,IAAI,CAACG,QAAQ,CAAC;MACZpB,IAAI,EAAE,IAAI,CAACqB,KAAK,CAACrB,IAAI;MACrBC,IAAI,EAAE,IAAI,CAACqB,cAAc,CAACL,QAAQ;IACpC,CAAC,CAAC;EACJ;EACAK,cAAc,CAACL,QAAQ,EAAE;IACvB,OAAO;MACLf,WAAW,EAAEe,QAAQ,CAACf;MACtB;AACN;AACA;AACA;AACA;MACM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,CAAC;EACH;;EASAqB,MAAM,GAAG;IACP,oBACE,QAAC,KAAK,CAAC,QAAQ;MAAA,wBACb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACpB;QAAA,4BACgB,GAAG,EAChB,IAAI,CAACxB,KAAK,CAACC,IAAI,CAACwB,IAAI,KAAK,SAAS,GAAG,cAAc,GAAG,UAAU,YAC1D,IAAI,CAACzB,KAAK,CAACE,IAAI,CAACkB,KAAK,eAC5B;UAAM,QAAQ,EAAE,IAAI,CAACM,YAAa;UAAA,WAC/B,IAAI,CAACC,WAAW,CAAC,aAAa,EAAE,cAAc,CAAC,EAC/C,IAAI,CAACC,YAAY,CAAC,cAAc,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAC7B;MAAA;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA,QACS;EAErB;AACF;AAEA,eAAe7B,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}